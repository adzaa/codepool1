{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adidz\\\\OneDrive\\\\Radna povr\\u0161ina\\\\movie-app\\\\src\\\\context\\\\MovieContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nexport const MovieContext = /*#__PURE__*/createContext();\nconst API_KEY = 'eb4d3091';\n\nconst MovieApp = ({\n  children\n}) => {\n  _s();\n\n  const [favorites, setFavorites] = useState([]);\n  const [movies, setMovies] = useState();\n  const [search, setSearch] = useState('');\n  const [selectedMovie, setSelectedMovie] = useState('');\n\n  const fetchMovies = async searchValue => {\n    const response = await axios(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${searchValue}`);\n    const data = response.data;\n    setMovies(data.Search);\n  };\n\n  const removeFavoriteMovie = movie => {\n    movie.isFavorite = false;\n    const newFavoriteList = favorites.filter(fav => fav.imdbID !== movie.imdbID);\n    setFavorites(newFavoriteList);\n  };\n\n  const addFavoriteMovie = movie => {\n    movie.isFavorite = true;\n    const newFavoriteList = [...favorites, movie];\n    setFavorites(newFavoriteList);\n  };\n\n  const favoriteHandler = (movie, e) => {\n    e.preventDefault();\n\n    if (favorites.includes(movie)) {\n      removeFavoriteMovie(movie);\n    } else {\n      addFavoriteMovie(movie);\n    }\n  };\n\n  const showDetail = async id => {\n    const response = await axios(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`);\n    const data = response.data;\n    setSelectedMovie(data);\n  };\n\n  useEffect(() => {\n    console.log(API_KEY);\n    fetchMovies(search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      setSearch,\n      movies,\n      favorites,\n      favoriteHandler,\n      showDetail,\n      selectedMovie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieApp, \"rEmWpLE49LHf8+s1QC4ow25zA9g=\");\n\n_c = MovieApp;\nexport default MovieApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieApp\");","map":{"version":3,"sources":["C:/Users/adidz/OneDrive/Radna povrÅ¡ina/movie-app/src/context/MovieContext.js"],"names":["React","createContext","useState","useEffect","axios","MovieContext","API_KEY","MovieApp","children","favorites","setFavorites","movies","setMovies","search","setSearch","selectedMovie","setSelectedMovie","fetchMovies","searchValue","response","data","Search","removeFavoriteMovie","movie","isFavorite","newFavoriteList","filter","fav","imdbID","addFavoriteMovie","favoriteHandler","e","preventDefault","includes","showDetail","id","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAEP,MAAMK,OAAO,GAAG,UAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMe,WAAW,GAAG,MAAOC,WAAP,IAAuB;AACzC,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CACzB,mCAAkCE,OAAQ,MAAKY,WAAY,EADlC,CAA5B;AAGA,UAAME,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAR,IAAAA,SAAS,CAACQ,IAAI,CAACC,MAAN,CAAT;AACD,GAND;;AAQA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrCA,IAAAA,KAAK,CAACC,UAAN,GAAmB,KAAnB;AACA,UAAMC,eAAe,GAAGhB,SAAS,CAACiB,MAAV,CACrBC,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAeL,KAAK,CAACK,MADR,CAAxB;AAGAlB,IAAAA,YAAY,CAACe,eAAD,CAAZ;AACD,GAND;;AAQA,QAAMI,gBAAgB,GAAIN,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACA,UAAMC,eAAe,GAAG,CAAC,GAAGhB,SAAJ,EAAec,KAAf,CAAxB;AACAb,IAAAA,YAAY,CAACe,eAAD,CAAZ;AACD,GAJD;;AAMA,QAAMK,eAAe,GAAG,CAACP,KAAD,EAAQQ,CAAR,KAAc;AACpCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIvB,SAAS,CAACwB,QAAV,CAAmBV,KAAnB,CAAJ,EAA+B;AAC7BD,MAAAA,mBAAmB,CAACC,KAAD,CAAnB;AACD,KAFD,MAEO;AACLM,MAAAA,gBAAgB,CAACN,KAAD,CAAhB;AACD;AACF,GAPD;;AASA,QAAMW,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMhB,QAAQ,GAAG,MAAMf,KAAK,CACzB,mCAAkCE,OAAQ,MAAK6B,EAAG,EADzB,CAA5B;AAGA,UAAMf,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAJ,IAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACD,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,OAAO,CAACC,GAAR,CAAY/B,OAAZ;AACAW,IAAAA,WAAW,CAACJ,MAAD,CAAX;AACD,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;AAKA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SADK;AAELH,MAAAA,MAFK;AAGLF,MAAAA,SAHK;AAILqB,MAAAA,eAJK;AAKLI,MAAAA,UALK;AAMLnB,MAAAA;AANK,KADT;AAAA,cAUGP;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhED;;GAAMD,Q;;KAAAA,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nexport const MovieContext = createContext();\r\n\r\nconst API_KEY = 'eb4d3091'; \r\n\r\nconst MovieApp = ({ children }) => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [movies, setMovies] = useState();\r\n  const [search, setSearch] = useState('');\r\n  const [selectedMovie, setSelectedMovie] = useState('');\r\n\r\n  const fetchMovies = async (searchValue) => {\r\n    const response = await axios(\r\n      `https://www.omdbapi.com/?apikey=${API_KEY}&s=${searchValue}`\r\n    );\r\n    const data = response.data;\r\n    setMovies(data.Search);\r\n  };\r\n\r\n  const removeFavoriteMovie = (movie) => {\r\n    movie.isFavorite = false;\r\n    const newFavoriteList = favorites.filter(\r\n      (fav) => fav.imdbID !== movie.imdbID\r\n    );\r\n    setFavorites(newFavoriteList);\r\n  };\r\n\r\n  const addFavoriteMovie = (movie) => {\r\n    movie.isFavorite = true;\r\n    const newFavoriteList = [...favorites, movie];\r\n    setFavorites(newFavoriteList);\r\n  };\r\n\r\n  const favoriteHandler = (movie, e) => {\r\n    e.preventDefault();\r\n    if (favorites.includes(movie)) {\r\n      removeFavoriteMovie(movie);\r\n    } else {\r\n      addFavoriteMovie(movie);\r\n    }\r\n  };\r\n\r\n  const showDetail = async (id) => {\r\n    const response = await axios(\r\n      `https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`\r\n    );\r\n    const data = response.data;\r\n    setSelectedMovie(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(API_KEY)\r\n    fetchMovies(search);\r\n  }, [search]);\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{\r\n        setSearch,\r\n        movies,\r\n        favorites,\r\n        favoriteHandler,\r\n        showDetail,\r\n        selectedMovie,\r\n      }}\r\n    >\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MovieApp;\r\n"]},"metadata":{},"sourceType":"module"}